{"version":3,"sources":["assets/HandsPurple.png","UserContext.js","components/Navigation.jsx","components/HomeBar.jsx","components/TopBar.jsx","styles/ListItem.js","components/Offer.jsx","api.js","components/CreateOffer.jsx","components/OfferList.jsx","components/VolunteerList.jsx","components/PatientList.jsx","components/ErrorBox.jsx","components/Signin.jsx","components/HelpPicker.jsx","styles/UserForm.js","components/Signup.jsx","components/PatientDetail.jsx","components/Loader.jsx","components/UserProfile.jsx","routes.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","React","createContext","user","setUser","StyledNav","styled","nav","props","theme","colors","main","secondary","StyledLink","Link","Navigation","Consumer","value","to","token","StyledBar","div","StyledImg","img","HomeBar","src","HandsPurple","StyledContainer","TopBar","ListItem","Offer","name","description","setToken","newToken","apiObj","axios","create","baseURL","interceptors","request","use","config","console","log","headers","Authorization","StyledForm","form","CreateOffer","state","open","handleNameChange","bind","handleDescriptionChange","handleSubmit","event","this","setState","target","api","post","then","response","history","push","preventDefault","onSubmit","htmlFor","id","onChange","type","Component","withRouter","OfferList","useState","offers","setOffers","loading","setLoading","useEffect","get","data","catch","error","url","useRouteMatch","map","offer","key","StyledDiv","StyledH1","h1","VolunteerList","volunteers","setVolunteers","volunteer","location","PatientList","patients","setPatients","patient","Container","ErrorBox","message","Signin","username","email","password","context","isPatient","handleEmailChange","handlePasswordChange","required","contextType","HelpPicker","header","helpTypes","help","checked","has","handleChange","UserForm","InputElementContainer","Signup","handlePatientChange","handleHelpChange","parseInt","match","nextChecked","Set","checkedHelpTypes","add","delete","handleUsernameChange","handlePasswordConfChange","passwordConf","handleLocationChange","helpTypeIds","res","err","lastName","StyledElement","StyledH2","h2","HelpButton","button","PatientDetail","useParams","setPatient","userAssociated","setUserAssociated","addVolunteer","patientId","volunteerId","a","elem","network","onClick","Loader","UserProfile","updatedUser","user_name","path","exact","component","accent","App","className","Provider","routes","route","index","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bc45845.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HandsPurple.81645415.png\";","import React from 'react';\n\nconst UserContext = React.createContext({\n  user: null,\n  setUser: (user) => { this.user = user; },\n});\n\nexport default UserContext;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  Link,\n} from 'react-router-dom';\nimport UserContext from '../UserContext';\n\nconst StyledNav = styled.nav`\ncolor: ${(props) => props.theme.colors.main};\nbackground-color: ${(props) => props.theme.colors.secondary};\ndisplay: flex;\njustify-content: space-around;\npadding 1em;\nheight: 100%;\nmargin-left: 2%;\nflex: 4;\n`;\n\n\nconst StyledLink = styled(Link)`\ncolor: ${(props) => props.theme.colors.main};\n`;\n\nconst Navigation = () => {\n  return (\n  <UserContext.Consumer>\n      {(value) => (\n        <StyledNav>\n          <StyledLink to='/volunteers'>Volunteers</StyledLink>\n          <StyledLink to='/patients'>Patients</StyledLink>\n          {!(value.user.token) && <StyledLink to='/signup'>Sign up</StyledLink>}\n          {!(value.user.token) && <StyledLink to='/signin'>Sign in</StyledLink>}\n          {value.user.token && <StyledLink to='/users/edit'>My Profile</StyledLink>}\n        </StyledNav>\n      )\n      }\n  </UserContext.Consumer>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  Link,\n} from 'react-router-dom';\nimport HandsPurple from '../assets/HandsPurple.png';\n\nconst StyledBar = styled.div`\nbackground-color: green;\ntext-align: center;\nflex:1;\n`;\n\nconst StyledImg = styled.img`\nwidth: 40px;\nheight:auto;\n`;\n\nconst StyledLink = styled(Link)`\ndislpay: inline-block;\n`;\n\nconst HomeBar = () => (\n  <StyledBar>\n    <StyledLink to={'/patients'}><StyledImg src={ HandsPurple }/></StyledLink>\n  </StyledBar>\n);\n\nexport default HomeBar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Navigation from './Navigation.jsx';\nimport HomeBar from './HomeBar.jsx';\n\nconst StyledContainer = styled.div`\ndisplay:flex;\nwidth: 100%;\npadding-bottom: 2%;\n`;\n\nconst TopBar = () => (\n  <StyledContainer>\n    <HomeBar/>\n    <Navigation/>\n  </StyledContainer>\n);\n\nexport default TopBar;\n","import styled from 'styled-components';\n\nconst ListItem = styled.div`\n  background-color: ${(props) => props.theme.colors.main};\n  margin-left: 2%;\n  margin-right: 2%;\n  border-radius: 5px;\n  & > * {\n    padding: 10px;\n  }\n`;\n\nexport default ListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '../styles/ListItem';\n\nconst Offer = (props) => (\n  <ListItem>\n    <h2>{props.name}</h2>\n    {props.description}\n  </ListItem>\n);\n\nOffer.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport default Offer;\n","import axios from 'axios';\n\nconst apiUrl = 'http://localhost:3000/api/';\n\nlet token = null;\nconst setToken = (newToken) => {\n  token = 'JWT '+ newToken;\n};\n\nconst apiObj = axios.create({\n  baseURL: apiUrl,\n});\napiObj.interceptors.request.use((config) => {\n  console.log('token in api', token);\n  config.headers.Authorization = token;\n  return config;\n});\nexport { setToken };\nexport default apiObj;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport api from '../api';\n\nconst StyledForm = styled.form`\n display: flex;\n flex-direction: column;\n background-color: ${(props) => (props.theme.colors.main)};\n padding-left: 2.5rem;\n padding-right: 2.5rem;\n`;\n\nclass CreateOffer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: '', description: '', open: false };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleDescriptionChange(event) {\n    this.setState({ description: event.target.value });\n  }\n\n  handleSubmit(event) {\n    api.post('/offers', {\n      name: this.state.name,\n      description: this.state.description,\n    }).then((response) => {\n      this.props.history.push('/offers');\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n        <StyledForm onSubmit={this.handleSubmit}>\n          <label htmlFor='offerName'> Name </label>\n        <textarea id='offerName' value={this.state.name} onChange={this.handleNameChange}/> \n          <label htmlFor='offerDescription'>Description</label>\n        <textarea id='offerDescription' value={this.state.description} onChange={this.handleDescriptionChange}/>\n          <input type=\"submit\" value=\"Submit\" />\n        </StyledForm>\n    );\n  }\n}\n\nexport default withRouter(CreateOffer);\n","import React, {useState, useEffect} from 'react';\nimport {\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n} from 'react-router-dom';\nimport Offer from './Offer.jsx';\nimport CreateOffer from './CreateOffer.jsx';\nimport api from '../api';\n\nconst OfferList = () => {\n  const [offers, setOffers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    api.get('/offers').then((response) => {\n      setOffers(response.data);\n      setLoading(false);\n    }).catch((error) => {\n      console.log(error);\n    });\n  }, []);\n\n  const { url } = useRouteMatch();\n  return (\n    <>\n      <Link to={`${url}/new`}>Create Offer</Link>\n          {!loading\n            ? offers.map((offer) => (\n              <div key={offer.id}>\n                <Offer name={offer.name} description={offer.description} />\n              </div>\n            ))\n            : <div>loading</div>\n        }\n    </>\n  );\n};\n\n\nOfferList.propTypes = {\n};\n\nexport default OfferList;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ListItem from '../styles/ListItem';\nimport api from '../api';\n\nconst StyledDiv = styled.div``;\nconst StyledH1 = styled.h1`\nmargin-left: 2%;\n`;\n\nconst VolunteerList = () => {\n  const [loading, setLoading] = useState(true);\n  const [volunteers, setVolunteers] = useState([]);\n\n  useEffect(() => {\n    api.get('/volunteers').then((response) => {\n      setVolunteers(response.data);\n      setLoading(false);\n    });\n  }, []);\n\n  if (!loading) {\n    return (\n      <StyledDiv>\n        <StyledH1>Volunteers</StyledH1>\n        {volunteers.map((volunteer) => (\n          <ListItem key={volunteer.id}>\n            <h1>{`${volunteer.name}`}</h1>\n            <div>{volunteer.description}</div>\n            <div>{volunteer.location}</div>\n          </ListItem>\n        ))}\n      </StyledDiv>\n    );\n  }\n  return (\n    <div>loading</div>\n  );\n};\n\nexport default VolunteerList;\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {\n  Link,\n  useRouteMatch,\n} from 'react-router-dom';\nimport ListItem from '../styles/ListItem';\nimport api from '../api';\n\nconst StyledDiv = styled.div``;\n\nconst StyledH1 = styled.h1`\nmargin-left: 2%;\n`;\n\nconst StyledLink = styled(Link)`\ncolor:black;\ntext-decoration: none;\n`;\n\nconst PatientList = () => {\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    api.get('/patients').then((response) => {\n      setPatients(response.data);\n      setLoading(false);\n    });\n  }, []);\n\n  if (!loading) {\n    return (\n      <StyledDiv>\n      <StyledH1>Patients</StyledH1>\n        {patients.map((patient) => (\n          <StyledLink to={`${url}/${patient.id}`} key={patient.id} >\n            <ListItem>\n              <h2>{`${patient.name}`}</h2>\n              <div>{patient.description}</div>\n              <div>{patient.location}</div>\n            </ListItem>\n          </StyledLink>\n        ))}\n      </StyledDiv>\n    );\n  }\n  return (<div>loading</div>);\n};\nexport default PatientList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\ncolor: #c81e1e;\nborder: 1px solid #f98080;\nbackground-color: #fde8e8;\nborder-radius: 5px;\ntext-align: center;\npadding: 2px;\n`;\n\nconst ErrorBox = (props) => (\n  <Container>\n    <h2>Error</h2>\n    <span>{ props.message }</span>\n  </Container>\n);\n\nErrorBox.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ErrorBox;\n","import React from 'react';\nimport api, {setToken} from '../api';\nimport styled from 'styled-components';\nimport UserContext from '../UserContext';\nimport { withRouter } from 'react-router-dom';\nimport ErrorBox from './ErrorBox.jsx';\n\n\nconst StyledContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nheight: 60%;\n`;\nconst StyledForm = styled.form`\nbackground-color: ${(props) => (props.theme.colors.main)};\nmax-width: 300px;\nmargin: auto;\ndisplay: flex;\nflex-direction: column;\npadding: 2%;\nborder-raduius: 5px;\n`;\nconst StyledDiv = styled.div`\npadding: 7px;\ndisplay: flex;\nflex-direction: column;\n& > * {\n  padding:5px;\n}\n`;\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = ({ email: '', password: '', error: null });\n  }\n\n  handleSubmit = (event) => {\n    api.post('/signin', {\n      username: this.state.email,\n      password: this.state.password,\n    }).then((response) => {\n      console.log('response in signin', response);\n      this.context.setUser(response.data);\n      setToken(response.data.token);\n      if (response.data.isPatient) {\n        this.props.history.push('/volunteers');\n      }\n      else {\n        this.props.history.push('/patients');\n      }\n    }).catch((error) => {\n      console.log('error', error.response.data);\n      this.setState({ error: error.response.data });\n    });\n    event.preventDefault();\n  }\n\n  handleEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  }\n\n  handlePasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  }\n\n  render() {\n    return (\n      <StyledContainer>\n      { this.state.error && <ErrorBox message={this.state.error} /> }\n        <StyledForm onSubmit={this.handleSubmit} >\n          <StyledDiv>\n            <label htmlFor='loginEmail'>User Name(email)</label>\n            <input id='loginEmail' type='text' required={ true } value={this.state.email} onChange={this.handleEmailChange} />\n          </StyledDiv>\n          <StyledDiv>\n            <label htmlFor='loginPassword'>password</label>\n            <input id='loginPassword' type='password' required={ true } value={this.state.password} onChange={this.handlePasswordChange} />\n          </StyledDiv>\n          <input type=\"submit\" value=\"Login\" />\n        </StyledForm>\n      </StyledContainer>\n    );\n  }\n}\n\nSignin.contextType = UserContext;\nexport default withRouter(Signin);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst HelpPicker = (props) => (\n    <div>\n      <h2>{props.header}</h2>\n      {\n        props.helpTypes.map((help) => (\n          <div key={help.id}>\n            <label htmlFor={`helpType${help.id}`}>\n              {`${help.name}`}\n              <input\n                key={help.id}\n                checked={props.checked.has(help.id)}\n                id={`helpType_${help.id}`}\n                type=\"checkbox\"\n                name={help.name}\n                onChange={props.handleChange}/>\n            </label>\n          </div>\n        ))\n      }\n    </div>\n);\nHelpPicker.propTypes = {\n  header: PropTypes.string,\n  helpTypes: PropTypes.array.isRequired,\n  checked: PropTypes.instanceOf(Set).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default HelpPicker;\n","import styled from 'styled-components';\n\nconst UserForm = styled.form`\nbackground-color: ${(props) => props.theme.colors.main};\ndisplay: flex;\nflex-direction: column;\nmax-width: 700px;\nborder-radius: 5px;\npadding-left: 2.5rem;\npadding-right: 2.5rem;\nmargin-left: auto;\nmargin-right: auto;\n`;\n\nexport default UserForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport HelpPicker from './HelpPicker.jsx';\nimport api, {setToken} from '../api';\nimport UserContext from '../UserContext';\nimport UserForm from '../styles/UserForm';\nimport ErrorBox from './ErrorBox';\n\n\nconst InputElementContainer = styled.div`\npadding: 20px;\nborder-bottom: 2px solid grey;\n`;\n\nclass Signup extends React.Component {\n  constructor(props) {\n    console.log('PROPS IN SINUP', props);\n    super(props);\n    this.state = {\n      isPatient: true,\n      name: '',\n      username: '',\n      description: '',\n      password: '',\n      passwordConf: '',\n      location: '',\n      helpTypes: [],\n      loading: true,\n      checkedHelpTypes: new Set(),\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    console.log('context', this.context);\n    api.get('/helpTypes').then((res) => {\n      this.setState({ helpTypes: res.data, loading: false });\n    }).catch((err) => {\n      console.log(err);\n      //TODO error handling;\n    });\n  }\n\n  handlePatientChange = () => {\n    this.setState({ isPatient: !this.state.isPatient });\n  }\n\n  handleDescriptionChange = (event) => {\n    this.setState({ description: event.target.value });\n  }\n\n  handleHelpChange = (event) => {\n    const id = parseInt(event.target.id.match(/\\d+$/)[0], 10);\n    const nextChecked = new Set(this.state.checkedHelpTypes);\n    if (event.target.checked) {\n      nextChecked.add(id);\n    } else {\n      nextChecked.delete(id);\n    }\n    this.setState({ checkedHelpTypes: nextChecked }, () => {\n      console.log('after help change', this.state.checkedHelpTypes);\n    });\n  }\n\n  handleNameChange = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n\n  handleUsernameChange = (event) => {\n    this.setState({ username: event.target.value });\n  }\n\n  handlePasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  }\n\n\n  handlePasswordConfChange = (event) => {\n    this.setState({ passwordConf: event.target.value });\n  }\n\n  handleLocationChange = (event) => {\n    this.setState({ location: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.password !== this.state.passwordConf) {\n      this.setState({ error: 'Passwords do not match' });\n      return;\n    }\n    const helpTypeIds = [...this.state.checkedHelpTypes];\n    console.log('help types in submit', helpTypeIds);\n    api.post('/signup', {\n      name: this.state.name,\n      username: this.state.username,\n      password: this.state.password,\n      location: this.state.location,\n      description: this.state.description,\n      isPatient: this.state.isPatient,\n      helpTypeIds,\n    }).then((response) => {\n      console.log('RESPONSE', response);\n      this.context.setUser(response.data);\n      setToken(response.data.token);\n      if (response.data.isPatient) {\n        this.props.history.push('/volunteers');\n      }\n      else {\n        this.props.history.push('/patients');\n      }\n    }).catch((error) => {\n      this.setState({ error: error.response.data });\n    });\n  }\n\n\n  render() {\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n    return (\n      <>\n      {this.state.error && <ErrorBox message={this.state.error} />}\n      <UserForm onSubmit={this.handleSubmit}>\n        <InputElementContainer>\n          <h2>Which are you?</h2>\n          <label htmlFor=\"signupPatient\">Patient</label>\n          <input id=\"signupPatient\" value=\"patient\" name=\"signupRadio\" type=\"radio\" checked={this.state.isPatient} onChange={this.handlePatientChange} />\n          <label htmlFor=\"signupVolunteer\">Volunteer</label>\n          <input id=\"signupVolunteer\" value=\"volunteer\" name=\"signupRadio\" type=\"radio\" checked={!this.state.isPatient} onChange={this.handlePatientChange}/>\n        </InputElementContainer>\n        <InputElementContainer>\n          <label htmlFor='signupName'>Name</label>\n          <input type='text' required={true} id='signupName' value={this.state.lastName} onChange={this.handleNameChange} />\n        </InputElementContainer>\n        <InputElementContainer>\n          <label htmlFor='signupLocation'>Location</label>\n          <input type='text' required={true} id='signupLocation' value={this.state.location} onChange={this.handleLocationChange} />\n        </InputElementContainer>\n        <InputElementContainer>\n        <label htmlFor=\"signupDescription\">About you</label>\n        <textarea id=\"signupDescription\" required={true} value={this.state.description} onChange={this.handleDescriptionChange}></textarea>\n        </InputElementContainer>\n        <InputElementContainer>\n          <label htmlFor='signupUsername'>Email</label>\n          <input type='email' id='signupUsername' required={true} value={this.state.username} onChange={this.handleUsernameChange} />\n        </InputElementContainer>\n        <InputElementContainer>\n          <label htmlFor='signupPassword'>Password</label>\n          <input type='password' id='signupPassword' required={true} value={this.state.password} onChange={this.handlePasswordChange} />\n        </InputElementContainer>\n        <InputElementContainer>\n          <label htmlFor='signupPasswordConf'>Confirm Password</label>\n          <input type='password' id='signupPasswordConf' value={this.state.passwordConf} onChange={this.handlePasswordConfChange} />\n        </InputElementContainer>\n\n        <HelpPicker header={`What ${this.state.isPatient ? 'do you need' : 'can you'} help with`} helpTypes={this.state.helpTypes} checked={this.state.checkedHelpTypes} handleChange={this.handleHelpChange} />\n        <input type=\"submit\" value=\"Sign up\" />\n      </UserForm>\n      </>\n    );\n  }\n}\n\nSignup.contextType = UserContext;\nexport default withRouter(Signup);\n","import React, { useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport api from '../api';\nimport UserContext from '../UserContext';\n\nconst StyledContainer = styled.div`\nbackground-color:  ${(props) => props.theme.colors.main};\ndisplay: flex;\nflex-direction: column;\nmax-width: 700px;\nborder-radius: 5px;\npadding-left: 2.5rem;\npadding-right: 2.5rem;\nmargin-left: auto;\nmargin-right: auto;\n`;\n\nconst StyledElement = styled.div`\npadding: 10px;\nborder-bottom: 2px solid grey;\n`;\n\nconst StyledH2 = styled.h2`\nmargin-left: auto;\nmargin-right: auto;\n`;\n\nconst HelpButton = styled.button`\n  width: auto;\n  max-width: 200px;\n`;\n\nconst PatientDetail = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [patient, setPatient] = useState(null);\n  const [userAssociated, setUserAssociated] = useState(false);\n  useEffect(() => {\n    api.get(`/patients/${id}`).then((response) => {\n      setPatient(response.data);\n      setLoading(false);\n    }).catch((error) => {\n      console.log(error);\n      // TODO HANDLE ERROR\n    });\n  }, []);\n  if (loading) {\n    return (\n      <div>loading</div>\n    );\n  }\n  const addVolunteer = async (patientId, volunteerId) => {\n    const response = await api.post(`patients/${patientId}/volunteers/${volunteerId}`);\n    setPatient(response.data);\n  };\n  return (\n    <UserContext.Consumer>\n      {(value) => {\n        return (\n        <StyledContainer>\n          <StyledH2>{patient.name}</StyledH2>\n          <StyledElement>Location: {patient.location}</StyledElement>\n          <StyledElement>Description: {patient.description}</StyledElement>\n          <div>\n            <StyledH2>Needs help with:</StyledH2>\n            {patient.helpTypes.map(((elem) => (\n              <div key={elem.id} >\n                {elem.name}\n              </div>\n            )))}\n            <StyledH2>People helping:</StyledH2>\n              {patient.network.map(((elem) => {\n                if (elem.id === value.id) {\n                  setUserAssociated(true);\n                }\n                return (\n                  <div key={elem.id} >\n                    {elem.name}\n                  </div>\n                );\n              }\n              ))}\n          </div>\n            {(value.user.isPatient === false && userAssociated === false)\n              && <HelpButton onClick={() => { addVolunteer(patient.id, value.user.id); }}>\n                Help this person\n              </HelpButton>}\n          </StyledContainer>\n        );\n      }}\n    </UserContext.Consumer>\n  );\n};\n\nexport default PatientDetail;\n","import React from 'react';\n\nconst Loader = () => (\n  <div>Loading...</div>\n);\n\nexport default Loader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport HelpPicker from './HelpPicker.jsx';\nimport Loader from './Loader.jsx';\nimport UserForm from '../styles/UserForm';\nimport api, { setToken } from '../api';\nimport UserContext from '../UserContext';\n\nconst InputElementContainer = styled.div`\npadding: 20px;\nborder-bottom: 2px solid grey;\n`;\n\nclass UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPatient: true,\n      name: '',\n      username: '',\n      description: '',\n      password: '',\n      passwordConf: '',\n      location: '',\n      helpTypes: [],\n      loading: true,\n      checkedHelpTypes: new Set(),\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    console.log('context', this.context);\n    api.get('/helpTypes').then((res) => {\n      const { user } = this.context;\n      if (!user.name) {\n        this.props.history.push('/signin');\n      }\n      console.log('context in user profile', user);\n      this.setState({\n        location: user.location,\n        helpTypes: res.data,\n        loading: false,\n        checkedHelpTypes: new Set(this.context.user.helpTypes.map((elem) => (elem.id))),\n        name: user.name,\n        description: user.description,\n        username: user.user_name,\n      });\n    }).catch((err) => {\n      console.log('error in userprofile', err);\n      // TODO ERROR HANDLING;\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    api.post('/users/edit', {\n      name: this.state.name,\n      description: this.state.description,\n      location: this.state.location,\n      username: this.state.username,\n      password: this.state.password,\n      id: this.context.user.id,\n      helpTypeIds: [...this.state.checkedHelpTypes],\n    }).then((updatedUser) => {\n      this.context.setUser(updatedUser.data);\n      setToken(updatedUser.data.token);\n      this.props.history.push('/patients');\n    }).catch((error) => {\n      console.log('an error occured');\n    });\n\n  }\n\n  handleHelpChange = (event) => {\n    console.log('event in handle help change', event.target);\n    const id = parseInt(event.target.id.match(/\\d+$/)[0], 10);\n    const nextChecked = new Set(this.state.checkedHelpTypes);\n    if (event.target.checked) {\n      nextChecked.add(id);\n    } else {\n      nextChecked.delete(id);\n    }\n    this.setState({ checkedHelpTypes: nextChecked });\n  }\n\n  handlePatientChange = () => {\n    this.setState({ isPatient: !this.state.isPatient });\n  }\n\n  handleDescriptionChange = (event) => {\n    this.setState({ description: event.target.value });\n  }\n\n  handleNameChange = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n\n  handleUsernameChange = (event) => {\n    this.setState({ username: event.target.value });\n  }\n\n  handlePasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  }\n\n\n  handlePasswordConfChange = (event) => {\n    this.setState({ passwordConf: event.target.value });\n  }\n\n  handleLocationChange = (event) => {\n    this.setState({ location: event.target.value });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <Loader/>;\n    }\n    return (\n      <UserForm onSubmit = {this.handleSubmit}>\n        <InputElementContainer>\n          <label htmlFor='profileName'>Name</label>\n          <input type='text' required={true} id='profileName' value={this.state.name} onChange={this.handleNameChange} />\n        </InputElementContainer>\n        <InputElementContainer>\n          <label htmlFor='profileLocation'>Location</label>\n          <input type='text' required={true} id='profileLocation' value={this.state.location} onChange={this.handleLocationChange} />\n        </InputElementContainer>\n        <InputElementContainer>\n        <label htmlFor=\"profileDescription\">Description</label>\n        <textarea id=\"profileDescription\" required={true} value={this.state.description} onChange={this.handleDescriptionChange}></textarea>\n        </InputElementContainer>\n        <InputElementContainer>\n          <label htmlFor='profileUsername'>Email</label>\n          <input type='email' id='profileUsername' required={true} value={this.state.username} onChange={this.handleUsernameChange} />\n        </InputElementContainer>\n        <InputElementContainer>\n          <label htmlFor='profilePassword'>Password (leave blank to not change)</label>\n          <input type='password' id='profilePassword' value={this.state.password} onChange={this.handlePasswordChange} />\n        </InputElementContainer>\n        <InputElementContainer>\n          <label htmlFor='profilePasswordConf'>Confirm Password</label>\n          <input type='password' id='profilePasswordConf' value={this.state.passwordConf} onChange={this.handlePasswordConfChange} />\n        </InputElementContainer>\n        <HelpPicker header='Help types' helpTypes={this.state.helpTypes} handleChange={this.handleHelpChange} checked={this.state.checkedHelpTypes} />\n        <input type='submit' value='save'/>\n      </UserForm>\n    );\n\n  }\n}\n\nUserProfile.contextType = UserContext;\nexport default withRouter(UserProfile);\n","import React from 'react';\nimport OfferList from './components/OfferList.jsx';\nimport VolunteerList from './components/VolunteerList.jsx';\nimport PatientList from './components/PatientList.jsx';\nimport Signin from './components/Signin.jsx';\nimport Signup from './components/Signup.jsx';\nimport PatientDetails from './components/PatientDetail.jsx';\nimport CreateOffer from './components/CreateOffer.jsx';\nimport UserProfile from './components/UserProfile.jsx';\n\nexport default [\n  {\n    path: '/users/edit',\n    exact: true,\n    component: <UserProfile />,\n\n  },\n  {\n    path: '/',\n    exact: true,\n    component: <VolunteerList />,\n  },\n  {\n    path: '/volunteers',\n    exact: false,\n    component: <VolunteerList />,\n  },\n  {\n    path: '/offers/new',\n    exact: false,\n    component: <CreateOffer />,\n\n  },\n  {\n    path: '/offers',\n    exact: false,\n    component: <OfferList />,\n  },\n  {\n    path: '/patients/:id',\n    exact: false,\n    component: <PatientDetails />,\n  },\n  {\n    path: '/patients',\n    exact: true,\n    component: <PatientList/>,\n  },\n  {\n    path: '/signin',\n    exact: false,\n    component: <Signin/>,\n  },\n  {\n    path: '/signup',\n    exact: false,\n    component: <Signup/>,\n  },\n];\n","const theme = {\n  colors: {\n    main: '#e1e3e8',\n    secondary: '#303C6C',\n    accent: '#F4976C',\n  },\n};\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport TopBar from './components/TopBar.jsx';\nimport routes from './routes';\nimport theme from './theme';\nimport UserContext from './UserContext';\n\n\nfunction App() {\n  const [user, setUser] = useState({});\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <UserContext.Provider value ={{ user, setUser }}>\n          <Router>\n            <TopBar/>\n            <Switch>\n              {routes.map((route, index) => (\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}>\n                  {route.component}\n                </Route>\n              ))}\n            </Switch>\n          </Router>\n        </UserContext.Provider>\n      </ThemeProvider>\n    </div>\n  );\n}\nexport default App;\n","/*eslint-disable*/\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'), //eslint-disable-line\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}